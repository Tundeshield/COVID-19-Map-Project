[{"C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\index.js":"1","C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\App.js":"2","C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\reportWebVitals.js":"3","C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\InfoBox.js":"4","C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\Map.js":"5","C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\Table.js":"6","C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\util.js":"7","C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\LineGraph.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":3420,"mtime":1610674366845,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":826,"mtime":1610676660557,"results":"13","hashOfConfig":"10"},{"size":598,"mtime":1610651490671,"results":"14","hashOfConfig":"10"},{"size":434,"mtime":1610503540330,"results":"15","hashOfConfig":"10"},{"size":1428,"mtime":1610680118391,"results":"16","hashOfConfig":"10"},{"size":2119,"mtime":1610636572080,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"190qdc8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\index.js",[],["36","37"],"C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\App.js",["38","39"],"import { Card, CardContent, MenuItem } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { FormControl, Select } from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { convertToFloat, formatted, sortData } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\nimport logo from \"./logo.png\"\n\nfunction App() {\n\tconst [countries, setCountries] = useState([]);\n\tconst [country, setCountry] = useState(\"Worldwide\");\n\tconst [countryInfo, setCountryInfo] = useState({});\n\tconst [tableData, setTableData] = useState([]);\n\tconst [mapPosition, setMapPosition] = useState({\n\t\tlat: 34.80746,\n\t\tlng: -40.4796,\n\t});\n\tconst [mapZoom, setMapZoom] = useState(2);\n\tconst [mapCountries, setMapCountries] = useState([]);\n\n\tuseEffect(() => {\n\t\tfetch(\"https://disease.sh/v3/covid-19/all\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => setCountryInfo(data));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst getCountriesData = async () => {\n\t\t\tawait fetch(\"https://disease.sh/v3/covid-19/countries\")\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconst countries = data.map((country) => ({\n\t\t\t\t\t\tname: country.country,\n\t\t\t\t\t\tvalue: country.countryInfo.iso2,\n\t\t\t\t\t}));\n\t\t\t\t\tconst sortedData = sortData(data);\n\t\t\t\t\tsetTableData(sortedData);\n\t\t\t\t\tsetMapCountries(data);\n\t\t\t\t\tsetCountries(countries);\n\t\t\t\t});\n\t\t};\n\t\tgetCountriesData();\n\t}, []);\n\n\tconst onCountryChange = async (event) => {\n\t\tconst countryCode = event.target.value;\n\t\tsetCountry(countryCode);\n\t\tconst url =\n\t\t\tcountryCode === \"Worldwide\"\n\t\t\t\t? \"https://disease.sh/v3/covid-19/all\" &&\n\t\t\t\t  setMapPosition({ lat: 8.7832, lng: 34.5085 })\n\t\t\t\t: `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\t\tawait fetch(url)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetCountryInfo(data);\n\t\t\t\tsetCountry(countryCode);\n\t\t\t\tsetMapPosition([data.countryInfo.lat, data.countryInfo.long]);\n\t\t\t\tconsole.log(data.country);\n\t\t\t\tsetMapZoom(3);\n\t\t\t});\n\t};\n\n\t// if worldwide is clicked, i want the state of the details of the map to direct me to somewhere default\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"app_left\">\n\t\t\t\t<div className=\"app_header\">\n\t\t\t\t\t<img src={logo} alt=\"logo\"/>\n\t\t\t\t\t<FormControl className=\"app_dropdown\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tonChange={onCountryChange}\n\t\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem value=\"Worldwide\">Worldwide</MenuItem>\n\t\t\t\t\t\t\t{countries.map((country) => (\n\t\t\t\t\t\t\t\t<MenuItem value={country.value}>{country.name}</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"app_stats\">\n\t\t\t\t\t<InfoBox\n\t\t\t\t\t\ttitle=\"Coronavirus Cases\"\n\t\t\t\t\t\tcases={countryInfo.todayCases}\n\t\t\t\t\t\ttotal={countryInfo.cases}\n\t\t\t\t\t/>\n\t\t\t\t\t<InfoBox\n\t\t\t\t\t\ttitle=\"Recovered\"\n\t\t\t\t\t\tcases={countryInfo.todayRecovered}\n\t\t\t\t\t\ttotal={countryInfo.recovered}\n\t\t\t\t\t/>\n\t\t\t\t\t<InfoBox\n\t\t\t\t\t\ttitle=\"Deaths\"\n\t\t\t\t\t\ttotal={countryInfo.deaths}\n\t\t\t\t\t\tcases={countryInfo.todayDeaths}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{/*Map*/}\n\t\t\t\t<Map countries={mapCountries} center={mapPosition} zoom={mapZoom} />\n\t\t\t</div>\n\n\t\t\t<Card className=\"app-right\">\n\t\t\t\t<CardContent>\n\t\t\t\t\t<h3>Live cases by country</h3>\n\t\t\t\t\t<Table countries={tableData} />\n\t\t\t\t\t<LineGraph />\n\t\t\t\t\t{/*Dynamic graph*/}\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\InfoBox.js",[],"C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\Map.js",[],"C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\Table.js",[],"C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\util.js",[],"C:\\Users\\user\\desktop\\covid19-tracker\\covid-19-tracker\\src\\LineGraph.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":8,"column":10,"nodeType":"46","messageId":"47","endLine":8,"endColumn":24},{"ruleId":"44","severity":1,"message":"48","line":8,"column":26,"nodeType":"46","messageId":"47","endLine":8,"endColumn":35},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'convertToFloat' is defined but never used.","Identifier","unusedVar","'formatted' is defined but never used.","no-global-assign","no-unsafe-negation"]